.row {
	
	/* This bit creates an empty pseudo component 'after' the row contents
	and clears the float. The display line is for browser support. 
	Code is in _mixins.css */
	@mixin clearfix;

	&--t-padding {
		padding-top: 80px;
	}

	&--gutters {
		margin-right: -65px; /* To negate the right padding on the last column */
	}


	&--gutters-large {
		margin-right: -100px;
	}

	&--gutters-small {
		margin-right: -45px;
	}

	&--gutters > div {
		padding-right: 65px;
	}

	&--gutters-large > div {
		padding-right: 100px;
	}

	&--gutters-small > div {
		padding-right: 45px;
	}

	&__b-margin-until-medium {
		margin-bottom: 1rem;
	}

	@mixin atMedium {

			&__b-margin-until-medium {
			margin-bottom: 0;
		}
			&__medium-4 {
			float: left;
			width: 33.33%;
		}

		&__medium-4-larger {
			width: 37%;
		}

		&__medium-6 {
			float: left;
			width: 50%;
		}

		&__medium-8 {
			float: left;
			width: 66.66%;
		}

		&__medium-8-smaller {
			width: 63%;
		}
	}

	@mixin atLarge {

			&__b-margin-until-large {
			margin-bottom: 0;
		}
			&__large-4 {
			float: left;
			width: 33.33%;
		}

		&__large-4-larger {
			width: 37%;
		}

		&__large-6 {
			float: left;
			width: 50%;
		}

		&__large-8 {
			float: left;
			width: 66.66%;
		}

		&__large-8-smaller {
			width: 63%;
		}
	}

	/* Begin equal height rules */
	&--equal-height-at-medium {
		@mixin atMedium {
			display: flex; /* applie flexbox to the row but not to the columns inside the row */
		}

		& > div { /* &=rows--equal-height-at-medium here */
			float: none; /* turn off the previous float */
			display: flex; /* tells browser to use flexbox in columns */
		}
	}

	&--equal-height-at-large {
		@mixin atLarge {
			display: flex; /* applie flexbox to the row but not to the columns inside the row */
		}

		& > div { /* &=rows--equal-height-at-medium here */
			float: none; /* turn off the previous float */
			display: flex; /* tells browser to use flexbox in columns */
		}
	}
}